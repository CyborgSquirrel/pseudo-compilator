# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: main.proto
# plugin: python-betterproto
from dataclasses import dataclass

import betterproto


@dataclass(eq=False, repr=False)
class PostJob(betterproto.Message):
    code: str = betterproto.string_field(1)
    language_enable_lists: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class JobResponse(betterproto.Message):
    success: "JobResponseSuccess" = betterproto.message_field(1, group="result")
    parser_error: "JobResponseParserError" = betterproto.message_field(
        2, group="result"
    )
    other_error: str = betterproto.string_field(3, group="result")


@dataclass(eq=False, repr=False)
class JobResponseSuccess(betterproto.Message):
    job_id: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class JobResponseParserError(betterproto.Message):
    line: int = betterproto.int32_field(1)
    column: int = betterproto.int32_field(2)
    message: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class JobInput(betterproto.Message):
    stdin: "JobInputStdin" = betterproto.message_field(1, group="message")
    stop: "JobInputStop" = betterproto.message_field(2, group="message")


@dataclass(eq=False, repr=False)
class JobInputStdin(betterproto.Message):
    text: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class JobInputStop(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class JobOutput(betterproto.Message):
    stdout: "JobOutputStdout" = betterproto.message_field(1, group="message")


@dataclass(eq=False, repr=False)
class JobOutputStdout(betterproto.Message):
    text: str = betterproto.string_field(1)
